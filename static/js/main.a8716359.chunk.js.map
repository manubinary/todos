{"version":3,"sources":["actions/types.js","http-common.js","services/service.js","actions/action.js","components/Home.js","App.js","reducers/action.js","reducers/index.js","store.js","index.js"],"names":["CREATE_TODO","UPDATE_TODO","RETRIEVE_TODOS","RETRIEVE_SELECTED","axios","create","baseURL","headers","http","get","id","data","post","put","delete","retrieveTodos","dispatch","a","TodoDataService","getAll","res","type","payload","console","log","retrieveTodo","updateTodo","update","Promise","resolve","reject","createTodo","connect","state","todos","action","selectedTodo","props","useState","details","setDetails","notification","setNotification","paginationIndex","setPaginationIndex","open","setOpen","createTodoFlag","setCreateTodoFlag","show","setShow","useDispatch","useEffect","timeId","setTimeout","clearTimeout","updateValues","value","key","result","getModalContent","className","Row","Col","md","onClick","name","defaultValue","title","onChange","e","target","completed","Button","variant","color","then","response","error","submitData","getCreateModalContent","createNewTodo","alt","Fragment","sm","lg","xl","map","item","userId","length","Pagination","count","Math","ceil","size","val","Dialog","onClose","DialogContent","DialogContentText","App","Switch","Route","path","component","Home","initialState","todoReducer","newState","updateStatus","createStatus","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"yUAAaA,EAAc,cACdC,EAAc,cACdC,EAAiB,iBAEjBC,EAAoB,oB,wBCFlBC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wCACTC,QAAS,CACP,eAAgB,sBCoBL,M,sFAtBb,WACE,OAAOC,EAAKC,IAAI,Y,iBAGlB,SAAIC,GACF,OAAOF,EAAKC,IAAL,iBAAmBC,M,oBAG5B,SAAOC,GACL,OAAOH,EAAKI,KAAK,SAAUD,K,oBAG7B,SAAOD,EAAIC,GACT,OAAOH,EAAKK,IAAL,iBAAmBH,GAAMC,K,oBAGlC,SAAOD,GACL,OAAOF,EAAKM,OAAL,iBAAsBJ,Q,MCIpBK,EAAgB,yDAAM,WAAOC,GAAP,eAAAC,EAAA,+EAEbC,EAAgBC,SAFH,OAEzBC,EAFyB,OAI/BJ,EAAS,CACPK,KAAMnB,EACNoB,QAASF,EAAIT,OANgB,gDAS/BY,QAAQC,IAAR,MAT+B,yDAAN,uDAahBC,EAAe,SAACf,GAAD,8CAAQ,WAAOM,GAAP,eAAAC,EAAA,+EAEdC,EAAgBT,IAAIC,GAFN,OAE1BU,EAF0B,OAGhCJ,EAAS,CACPK,KAAMlB,EACNmB,QAASF,EAAIT,OALiB,gDAQhCY,QAAQC,IAAR,MARgC,yDAAR,uDAafE,EAAa,SAAChB,EAAIC,GAAL,8CAAc,WAAOK,GAAP,eAAAC,EAAA,+EAElBC,EAAgBS,OAAOjB,EAAIC,GAFT,cAE9BS,EAF8B,OAIpCJ,EAAS,CACPK,KAAMpB,EACNqB,QAASX,IANyB,kBAS7BiB,QAAQC,QAAQT,EAAIT,OATS,yDAW7BiB,QAAQE,OAAR,OAX6B,yDAAd,uDAebC,EAAa,SAACpB,GAAD,8CAAU,WAAOK,GAAP,SAAAC,EAAA,+EAE1BC,EAAgBb,OAAOM,GAFG,OAIhCK,EAAS,CACPK,KAAMrB,EACNsB,QAAS,CAAEX,UANmB,+CAShCY,QAAQC,IAAR,MATgC,wDAAV,uD,OCiH1B,IAOeQ,eAPS,SAACC,GACvB,MAAO,CACLC,MAAOD,EAAME,OAAO,IAAMF,EAAME,OAAO,GAAGD,MAC1CE,aAAcH,EAAME,OAAO,IAAMF,EAAME,OAAO,GAAGC,gBAIb,CAAErB,gBAAeU,eAAcC,aAAaK,cAArEC,EA1Kf,SAAcK,GACZ,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA8CJ,mBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAwBN,oBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA4CR,oBAAS,GAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KACA,EAAwBV,oBAAS,GAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACMlC,EAAWmC,cAEjBC,qBAAU,WACR,IAAMC,EAASC,YAAW,WACxBJ,GAAQ,KACP,KAEH,OAAO,WACLK,aAAaF,OAIjBD,qBAAU,WACRpC,EAASD,OACR,IAEH,IAuDMyC,EAAe,SAACC,EAAOC,GAC3B,IAAMC,EAASZ,EAAiB,GAAKV,EAAMD,aAC3CuB,EAAOD,GAAOD,EACdjB,EAAWmB,IAGPC,EAAkB,WACtB,OAAQ,qBAAKC,UAAU,iBAAf,SACJ,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,sBAAtB,yBACA,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,cAAC,IAAD,CAAWC,QAAS,WA3DtCnB,GAAQ,IA2DkDe,UAAU,0BAC9D,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAT,mBAAuB,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,uBAAO3C,KAAK,OAAO6C,KAAK,QAAQC,aAAc9B,EAAMD,aAAagC,MAAOC,SAAU,SAACC,GAAD,OAAOd,EAAac,EAAEC,OAAOd,MAAO,cACzJ,cAACM,EAAA,EAAD,CAAKC,GAAI,EAAT,oBAAwB,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,uBAAO3C,KAAK,OAAO6C,KAAK,UAAUC,aAAc9B,EAAMD,aAAaoC,UAAWH,SAAU,SAACC,GAAD,OAAOd,EAAac,EAAEC,OAAOd,MAAO,kBAChK,eAACM,EAAA,EAAD,CAAKC,GAAI,GAAIH,UAAU,kBAAvB,UAAyC,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUV,QAAS,YA3DnF,SAACvD,GAClBoC,GAAQ,GACR,IAAMa,EAASpB,EACfoB,EAAM,GAASjD,EACfM,EAASU,EAAWhB,EAAIiD,IAASiB,MAAK,SAAAC,GACjCA,EAASC,MAENpC,EAAgB,kBADhBA,EAAgB,cAqDoFqC,CAAW1C,EAAMD,aAAa1B,KAA3F,sBAAzC,WANuC2B,EAAMD,aAAa1B,KAW5DsE,EAAwB,WAC5B,OAAQ,qBAAKnB,UAAU,iBAAf,SACJ,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,sBAAtB,sBACA,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,cAAC,IAAD,CAAWC,QAAS,kBAAMjB,GAAkB,IAAQa,UAAU,0BAC1E,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAT,mBAAuB,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,uBAAO3C,KAAK,OAAO6C,KAAK,QAAQG,SAAU,SAACC,GAAD,OAAOd,EAAac,EAAEC,OAAOd,MAAO,cACjH,cAACM,EAAA,EAAD,CAAKC,GAAI,EAAT,oBAAwB,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,uBAAO3C,KAAK,OAAO6C,KAAK,UAAUG,SAAU,SAACC,GAAD,OAAOd,EAAac,EAAEC,OAAOd,MAAO,kBACpH,eAACM,EAAA,EAAD,CAAKC,GAAI,GAAIH,UAAU,kBAAvB,UAAyC,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUV,QAAS,YA5DjF,WACpBjB,GAAkB,GAClB,IAAMW,EAAUpB,EAChBoB,EAAM,OAAa,EACnB3C,EAASe,EAAW4B,IAASiB,MAAK,SAAAC,GAG1BnC,EAFHmC,EAEmB,cADA,cAsDqFI,IAA7D,sBAAzC,aAuCR,OACE,sBAAKpB,UAAU,WAAf,UACCtC,QAAQC,IAAI,OAAQO,GACnB,cAAC+B,EAAA,EAAD,CAAKD,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CAAKF,UAAU,SAAf,SACE,qDAGDZ,GAAQ,qBAAKY,UAAU,wBAAf,SAAwCpB,IACnD,eAACqB,EAAA,EAAD,CAAKD,UAAU,UAAf,UACE,qBAAKA,UAAU,mBAAf,SAAkC,cAAC,IAAD,CAAeI,QAAS,kBAAMjB,GAAmBD,IAAmBc,UAAU,oBAAoBqB,IAAI,aACxI,cAACnB,EAAA,EAAD,UAAM1B,EAAMH,OAjGd,eAAC,IAAMiD,SAAP,WACE,eAACrB,EAAA,EAAD,CAAKD,UAAU,kBAAf,UACE,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,gBACA,cAACvB,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,qBACA,cAACvB,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,mBACA,cAACvB,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,oBACA,cAACvB,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,OAE/BjD,EAAMH,OAASG,EAAMH,MAAMqD,KAAI,SAACC,EAAM9B,GAAP,OAC7BA,GAAOf,GAAmBe,EAAMf,EAAkB,GACjD,eAACmB,EAAA,EAAD,CAAKD,UAAU,gBAAf,UACE,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,SAAkCE,EAAK9E,KACvC,cAACqD,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,SAAkCE,EAAKC,SACvC,cAAC1B,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,SAAkCE,EAAKpB,QACvC,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,SAAkCE,EAAKhB,UAAY,YAAc,kBACjE,cAACT,EAAA,EAAD,CAAKC,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGzB,UAAU,oBAA3C,SAA+D,cAAC,IAAD,CAAUI,QAAS,kBAhDzEvD,EAgD2F8E,EAAK9E,GA/CnHM,EAASS,EAAaf,SACtBoC,GAAQ,GAFU,IAACpC,GAgDqGmD,UAAU,4BACjH,WAkFXxB,EAAMH,OAASG,EAAMH,MAAMwD,OAAS,GAAK,oCAAM,cAACC,EAAA,EAAD,CAAY9B,UAAU,sBAAsB+B,MAAOC,KAAKC,KAAKzD,EAAMH,MAAMwD,OAAO,IAAKK,KAAK,QAAQ1B,SAAU,SAACC,EAAG0B,GAAJ,OAAWpD,EAA2B,IAAPoD,EAAI,aAEjMnD,GA9CD,cAACoD,EAAA,EAAD,CACEpD,KAAMA,EACNqD,QAAS,WAAMpD,GAAQ,GAAQN,EAAW,KAC1C,kBAAgB,qBAChB,mBAAiB,2BAJnB,SAME,cAAC2D,EAAA,EAAD,CAAetC,UAAU,eAAzB,SACE,cAACuC,EAAA,EAAD,CAAmB1F,GAAG,2BAAtB,UACKqC,GAAkBV,EAAMD,cAAkBwB,UAuClDb,GA9BD,cAACkD,EAAA,EAAD,CACEpD,KAAMd,EACNmE,QAAS,WAAMlD,GAAkB,IACjC,kBAAgB,qBAChB,mBAAiB,2BAJnB,SAME,cAACmD,EAAA,EAAD,CAAetC,UAAU,eAAzB,SACE,cAACuC,EAAA,EAAD,CAAmB1F,GAAG,2BAAtB,SACGsE,gBCxIEqB,MAVf,WACE,OACE,cAAC,IAAD,UACA,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWC,S,yCCD3BC,EAAe,GA4BNC,MA1Bf,WAAoD,IAA/B3E,EAA8B,uDAAtB0E,EAAcxE,EAAQ,uCACzCd,EAAkBc,EAAlBd,KAAMC,EAAYa,EAAZb,QAEd,OAAQD,GACN,KAAKnB,EACH,MAAM,GAAN,mBAAW+B,GAAX,CAAkB,CAACC,MAAOZ,KAE5B,KAAKnB,EACH,IAAM0G,EAAW5E,EAIjB,OAHI4E,EAAS,IAAMA,EAAS,GAAGzE,eAC7ByE,EAAS,GAAGzE,aAAed,GAEvB,GAAN,mBAAWuF,GAAX,CAAqB,CAACzE,aAAcd,KAEtC,KAAKrB,EACH,MAAM,GAAN,mBAAWgC,GAAX,CAAkB,CAAC6E,aAAcxF,KAEnC,KAAKtB,EACH,MAAM,GAAN,mBAAWiC,GAAX,CAAkB,CAAC8E,aAAczF,KAGnC,QACE,OAAOW,IC5BE+E,4BAAgB,CAC7B7E,WCGI8E,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCLzCO,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,U","file":"static/js/main.a8716359.chunk.js","sourcesContent":["export const CREATE_TODO = \"CREATE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const RETRIEVE_TODOS = \"RETRIEVE_TODOS\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const RETRIEVE_SELECTED = \"RETRIEVE_SELECTED\";\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});\r\n","import http from \"../http-common\";\r\n\r\nclass TodoDataService {\r\n  getAll() {\r\n    return http.get(\"/todos\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/todos/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/todos\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/todos/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/todos/${id}`);\r\n  }\r\n\r\n}\r\n\r\nexport default new TodoDataService();\r\n","import {\r\n  CREATE_TODO,\r\n  RETRIEVE_TODOS,\r\n  RETRIEVE_SELECTED,\r\n  UPDATE_TODO\r\n} from \"./types\";\r\n\r\nimport TodoDataService from \"../services/service\";\r\n\r\nexport const createTodos = (title, description) => async (dispatch) => {\r\n  try {\r\n    const res = await TodoDataService.create({ title, description });\r\n\r\n    dispatch({\r\n      type: CREATE_TODO,\r\n      payload: res.data,\r\n    });\r\n\r\n    return Promise.resolve(res.data);\r\n  } catch (err) {\r\n    return Promise.reject(err);\r\n  }\r\n};\r\n\r\nexport const retrieveTodos = () => async (dispatch) => {\r\n  try {\r\n    const res = await TodoDataService.getAll();\r\n\r\n    dispatch({\r\n      type: RETRIEVE_TODOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const retrieveTodo = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await TodoDataService.get(id);\r\n    dispatch({\r\n      type: RETRIEVE_SELECTED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n\r\nexport const updateTodo = (id, data) => async (dispatch) => {\r\n  try {\r\n    const res = await TodoDataService.update(id, data);\r\n\r\n    dispatch({\r\n      type: UPDATE_TODO,\r\n      payload: data,\r\n    });\r\n\r\n    return Promise.resolve(res.data);\r\n  } catch (err) {\r\n    return Promise.reject(err);\r\n  }\r\n};\r\n\r\nexport const createTodo = (data) => async (dispatch) => {\r\n  try {\r\n    await TodoDataService.create(data);\r\n\r\n    dispatch({\r\n      type: CREATE_TODO,\r\n      payload: { data },\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport './Home.scss';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { connect , useDispatch } from \"react-redux\";\r\nimport { retrieveTodos, retrieveTodo, updateTodo, createTodo } from \"../actions/action\";\r\n\r\n\r\nfunction Home(props) {\r\n  const [details, setDetails] = useState([]);\r\n  const [notification, setNotification] = useState('');\r\n  const [paginationIndex, setPaginationIndex] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [createTodoFlag, setCreateTodoFlag] = useState(false);\r\n  const [show, setShow] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const timeId = setTimeout(() => {\r\n      setShow(false);\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearTimeout(timeId);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(retrieveTodos());\r\n  }, []);\r\n\r\n  const editContact = (id) => {\r\n    dispatch(retrieveTodo(id));\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const submitData = (id) => {\r\n    setOpen(false);\r\n    const result = details;\r\n    result['id'] = id;\r\n    dispatch(updateTodo(id, result)).then(response => {\r\n        !response.error\r\n          ? setNotification(\"Updated\")\r\n          : setNotification(\"Updated Failed\");\r\n      });\r\n  };\r\n\r\n const createNewTodo = () => {\r\n   setCreateTodoFlag(false);\r\n   const result =  details;\r\n   result['userId'] = 5;\r\n   dispatch(createTodo(result)).then(response => {\r\n       !response\r\n         ? setNotification(\"Created\")\r\n         : setNotification(\"Not Created\");\r\n     });\r\n };\r\n\r\n  const getContactList = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <Row className=\"headerContainer\">\r\n          <Col md={2} sm={2} lg={2} xl={2}>Id</Col>\r\n          <Col md={2} sm={2} lg={2} xl={2}>User Id</Col>\r\n          <Col md={5} sm={5} lg={5} xl={5}>Title</Col>\r\n          <Col md={2} sm={2} lg={2} xl={2}>Status</Col>\r\n          <Col md={1} sm={1} lg={1} xl={1}></Col>\r\n        </Row>\r\n        {props.todos && props.todos.map((item, key) => (\r\n          (key >= paginationIndex && key < paginationIndex + 15) ?\r\n            <Row className=\"dataContainer\">\r\n              <Col md={2} sm={2} lg={2} xl={2}>{item.id}</Col>\r\n              <Col md={2} sm={2} lg={2} xl={2}>{item.userId}</Col>\r\n              <Col md={5} sm={5} lg={5} xl={5}>{item.title}</Col>\r\n              <Col md={2} sm={2} lg={2} xl={2}>{item.completed ? 'Completed' : 'Not Completed'}</Col>\r\n              <Col md={1} sm={1} lg={1} xl={1} className=\"editIconContainer\"><EditIcon onClick={() => editContact(item.id)} className='iconStyle editIcon'/></Col>\r\n            </Row> : ''\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const updateValues = (value, key) => {\r\n    const result = createTodoFlag ? {} : props.selectedTodo;\r\n    result[key] = value;\r\n    setDetails(result);\r\n  };\r\n\r\n  const getModalContent = () => {\r\n    return (<div className=\"modalContainer\" key={props.selectedTodo.id}>\r\n        <Row>\r\n          <Col md={6} className=\"editHeaderContainer\">Update TODO</Col>\r\n          <Col md={6}><CloseIcon onClick={() => closeModal()} className='iconStyle closeIcon'/></Col>\r\n          <Col md={4}>Title</Col><Col md={5}><input type=\"text\" name=\"email\" defaultValue={props.selectedTodo.title} onChange={(e) => updateValues(e.target.value, 'title')}/></Col>\r\n          <Col md={4}>Status</Col><Col md={5}><input type=\"text\" name=\"contact\" defaultValue={props.selectedTodo.completed} onChange={(e) => updateValues(e.target.value, 'completed')}/></Col>\r\n          <Col md={12} className=\"submitContainer\"><Button variant=\"contained\" color=\"primary\" onClick={() => { submitData(props.selectedTodo.id);}}> Submit </Button> </Col>\r\n        </Row>\r\n      </div>);\r\n  };\r\n\r\n  const getCreateModalContent = () => {\r\n    return (<div className=\"modalContainer\">\r\n        <Row>\r\n          <Col md={6} className=\"editHeaderContainer\">Add TODO</Col>\r\n          <Col md={6}><CloseIcon onClick={() => setCreateTodoFlag(false)} className='iconStyle closeIcon'/></Col>\r\n          <Col md={4}>Title</Col><Col md={5}><input type=\"text\" name=\"email\" onChange={(e) => updateValues(e.target.value, 'title')}/></Col>\r\n          <Col md={4}>Status</Col><Col md={5}><input type=\"text\" name=\"contact\" onChange={(e) => updateValues(e.target.value, 'completed')}/></Col>\r\n          <Col md={12} className=\"submitContainer\"><Button variant=\"contained\" color=\"primary\" onClick={() => { createNewTodo();}}> Submit </Button> </Col>\r\n        </Row>\r\n      </div>);\r\n  };\r\n\r\n  const getDetails = () => {\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={()=> {setOpen(false); setDetails([]);}}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent className=\"detailsModal\">\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {(!createTodoFlag && props.selectedTodo) &&  getModalContent()}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  const getCreateTodo = () => {\r\n    return (\r\n      <Dialog\r\n        open={createTodo}\r\n        onClose={()=> {setCreateTodoFlag(false); }}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent className=\"detailsModal\">\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {getCreateModalContent()}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  return(\r\n    <div className=\"mainHome\">\r\n    {console.log(\"3333\", createTodo)}\r\n      <Row className=\"mainHeader\">\r\n        <Col className=\"header\">\r\n          <h1>Simple CURD App</h1>\r\n        </Col>\r\n      </Row>\r\n        {show && <div className=\"notificationContainer\">{notification}</div>}\r\n      <Row className=\"content\" >\r\n        <div className=\"addIconContainer\"><AddCircleIcon onClick={() => setCreateTodoFlag(!createTodoFlag)  } className='iconStyle addIcon' alt=\"Create\"/></div>\r\n        <Col>{props.todos &&  getContactList()}</Col>\r\n        {(props.todos && props.todos.length > 0) &&<div> <Pagination className=\"paginationContainer\" count={Math.ceil(props.todos.length/15)} size=\"small\" onChange={(e, val)=> setPaginationIndex((val-1)*15)}/></div>}\r\n      </Row>\r\n      {open && getDetails()}\r\n      {createTodoFlag && getCreateTodo()}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.action[0] && state.action[0].todos,\r\n    selectedTodo: state.action[1] && state.action[1].selectedTodo\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { retrieveTodos, retrieveTodo, updateTodo , createTodo})(Home)\r\n","import {BrowserRouter as Router , Route, Switch} from 'react-router-dom';\nimport Home from './components/Home';\n\n\nfunction App() {\n  return (\n    <Router>\n\t\t  <Switch>\n\t\t    <Route path=\"/\" component={Home} />\n\t\t  </Switch>\n\t  </Router>\n  );\n}\n\nexport default App;\n","import {\r\n  CREATE_TODO,\r\n  RETRIEVE_TODOS,\r\n  RETRIEVE_SELECTED,\r\n  UPDATE_TODO\r\n} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nfunction todoReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case RETRIEVE_TODOS:\r\n      return [...state, {todos: payload}];\r\n\r\n    case RETRIEVE_SELECTED:\r\n      const newState = state;\r\n      if (newState[1] && newState[1].selectedTodo) {\r\n        newState[1].selectedTodo = payload;\r\n      }\r\n      return [...newState, {selectedTodo: payload}];\r\n\r\n    case UPDATE_TODO:\r\n      return [...state, {updateStatus: payload}];\r\n\r\n    case CREATE_TODO:\r\n      return [...state, {createStatus: payload}];\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport action from \"./action\";\r\n\r\nexport default combineReducers({\r\n  action,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}